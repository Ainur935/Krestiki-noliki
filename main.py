import sys
enter_symbols = []#список для вводимых координат символов для исключения повторного ввода
stroke_number = 0 #переменная для поочередного вывода крестика и нолика
symbol = None #переменная, определяющая, что будет: крестик или нолик
pole = ['   a b c\n', 'a', '1', '2', '3','\n','b', '4',  '5',  '6','\n', 'c', '7',  '8',  '9'] #графический вывод игрового поля



def beetwen_(): #функция для печати разделительной полосы
    print('_________________________________________________________________________________________________________')

print('Добро пожаловать в игру "Крестики - нолики". Да начнется битва!')
beetwen_()
print(*pole)
beetwen_()

def enter():# функция для ввода координат игрового символа
    global stroke_number#объявление глобальных переменных
    global symbol
    global pole
    a = input('Введите номер места для вашего символа (от 1 до 9):\n')
    #ввод игроком координат своего символа
    if a.isalpha() or a.isspace() or len(a) > 1:#проверяем,не введены ли ошибочно буквы или неотображаемые символы либо например в формате 06, а не 6
        print('Неверный формат или присутствует пробел')
        enter()#возврат к началу функции для корректного ввода координаты
    elif 0 < int(a) < 10 and a not in enter_symbols:#проверка на корректность вводимых данных(от 1 до 9) и на неповторяемость
        stroke_number += 1# увеличиваем на 1, чтобы поменять символ через четность - нечетность
        enter_symbols.append(a)#добавляем в список новую координату
        if stroke_number % 2 == 1:  # определяем какой символ будет выведен:крестик или нолик (четный крестик, нечетный нолик)
            symbol = '\033[0;34;40m0\033[0;0m'#придаем символам другие цвета для контраста
        else:
            symbol = '\033[0;31;40mx\033[0;0m'
        for i in pole:#добавляем символ на поле через нахождение совпадения введенной игроком координаты в игровом поле
            if i == a:
                pole[pole.index(i)] = symbol
        beetwen_()
        print(*pole)
        beetwen_()
        p1 = [pole[2], pole[3], pole[4]]# заводим списки для проверки совпадений символов
        p2 = [pole[7], pole[8], pole[9]]
        p3 = [pole[12], pole[13], pole[14]]
        p4 = [pole[2], pole[7], pole[12]]
        p5 = [pole[3], pole[8], pole[13]]
        p6 = [pole[4], pole[9], pole[14]]
        p7 = [pole[2], pole[8], pole[14]]
        p8 = [pole[4], pole[8], pole[12]]
        check_matches = [p1, p2, p3, p4, p5, p6, p7, p8]# заводим общий список для проверки его через цикл на наличие списка с совпадением всех символов
        for x in check_matches:
            if x[0] == x[1] and x[0] == x[2]:#в случае наличия совпадений всех символов объявляем победителя
                print(f'Победил игрок с символами {symbol}. Поздравляем!')
                print('Игра завершена.')
                sys.exit()
            else:#в случае отсутствия совпадений продолжаем выполнение функции
                continue
        if len(enter_symbols) > 8:
            print('Нет свободных полей для ввода. Боевая ничья.')
            sys.exit()
        enter()

    elif a in enter_symbols or a.strip() in enter_symbols:
        print('Данное место уже занято')
        enter()#возврат к началу функции для повторного ввода координат,
        # если введены данные, по которым символ в игровом поле уже стоит
    else:
        print('Вы ввели неверные данные (за пределами игрового поля)')
        enter()#возврат к началу функции, если введены неверные координаты


enter()





